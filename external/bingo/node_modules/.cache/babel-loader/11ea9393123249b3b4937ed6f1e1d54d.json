{"ast":null,"code":"import React,{Component}from'react';import{BrowserRouter as Router,Route}from\"react-router-dom\";import Board from'./board';import Instructions from'./instructions';import LeaderBoard from'./leaderboard';import WelcomeScreen from'./welcomeScreen';import Header from'./header';import firebase from'../firebase.js';import queryString from'query-string';import'./app.css';import'../tachyons.css';class App extends Component{constructor(props){super(props);this.state={gameId:queryString.parse(props.location.search).game,noSuchGame:false,signedIn:false};firebase.database().ref('games/'+this.state.gameId).once('value').then(game=>{this.setState({noSuchGame:!game.exists(),lexicon:game.child('lexicon').val(),size:game.child('size').val()});let instructions=game.child('instructions').val();if(instructions){this.setState({instructions:instructions.replace(/\\\\n/g,'\\n')});}});firebase.database().ref('games/'+this.state.gameId+'/leaderboard').orderByChild('duration').on('value',leaderboard=>{const values=leaderboard.val();const leaders=values?Object.values(leaderboard.val()).sort((a,b)=>{return a.duration-b.duration;}):[];this.setState({leaders:leaders});});}renderGame(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Board,{id:\"abc\",size:this.state.size,values:this.state.lexicon,db:firebase,gameId:this.state.gameId}),/*#__PURE__*/React.createElement(LeaderBoard,{leaders:this.state.leaders,size:this.state.size}),/*#__PURE__*/React.createElement(Instructions,{src:this.state.instructions}));}renderLoadingScreen(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(\"main\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"f3 pa2\",\"aria-live\":\"polite\"},\"Loading...\")));}renderWelcomeScreen(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(\"main\",null,/*#__PURE__*/React.createElement(WelcomeScreen,{firebase:firebase})),/*#__PURE__*/React.createElement(Instructions,null));}render(){if(this.state.gameId){if(!this.state.noSuchGame){if(this.state.lexicon&&this.state.size){return this.renderGame();}else{return this.renderLoadingScreen();}}}return this.renderWelcomeScreen();}}const AppRouter=()=>/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(Route,{path:\"/\",exact:true,component:App}));export default AppRouter;","map":{"version":3,"sources":["/home/jfellows/Documents/git/jfy133/bingo/src/components/app.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Board","Instructions","LeaderBoard","WelcomeScreen","Header","firebase","queryString","App","constructor","props","state","gameId","parse","location","search","game","noSuchGame","signedIn","database","ref","once","then","setState","exists","lexicon","child","val","size","instructions","replace","orderByChild","on","leaderboard","values","leaders","Object","sort","a","b","duration","renderGame","renderLoadingScreen","renderWelcomeScreen","render","AppRouter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Board from './board';\nimport Instructions from './instructions';\nimport LeaderBoard from './leaderboard';\nimport WelcomeScreen from './welcomeScreen';\nimport Header from './header';\nimport firebase from '../firebase.js';\nimport queryString from 'query-string';\nimport './app.css';\nimport '../tachyons.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gameId: queryString.parse(props.location.search).game,\n      noSuchGame: false,\n      signedIn: false,\n    };\n\n    firebase.database().ref('games/' + this.state.gameId).once('value').then((game) => {\n      this.setState({\n        noSuchGame: !game.exists(),\n        lexicon: game.child('lexicon').val(),\n        size: game.child('size').val()\n      });\n      let instructions = game.child('instructions').val();\n      if (instructions) {\n        this.setState({\n          instructions: instructions.replace(/\\\\n/g, '\\n')\n        });\n      }\n    });\n\n    firebase.database().ref('games/' + this.state.gameId + '/leaderboard').orderByChild('duration').on('value', (leaderboard) => {\n      const values = leaderboard.val();\n      const leaders = \n        values ?\n          Object.values(leaderboard.val()).sort((a, b) => {\n            return a.duration - b.duration;\n          }) : [];\n      this.setState({leaders: leaders});\n    });\n  }\n\n  renderGame() {\n    return (\n      <div>\n        <Board id='abc' size={this.state.size} values={this.state.lexicon} db={firebase} gameId={this.state.gameId} />\n        <LeaderBoard leaders={this.state.leaders} size={this.state.size} />\n        <Instructions src={this.state.instructions}/>\n      </div>\n    );\n  }\n\n  renderLoadingScreen() {\n    return (\n      <div>\n        <Header/>\n        <main>\n          <div className=\"f3 pa2\" aria-live='polite'>Loading...</div>\n        </main>\n      </div>\n    );\n  }\n\n  renderWelcomeScreen() {\n    return (\n      <div>\n        <Header/>\n        <main>\n          <WelcomeScreen firebase={firebase} />\n        </main>\n        <Instructions/>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.state.gameId) {\n      if (!this.state.noSuchGame) {\n        if (this.state.lexicon && this.state.size) {\n          return this.renderGame();\n        } else {\n          return this.renderLoadingScreen();\n        }\n      } \n    }\n    return this.renderWelcomeScreen();\n  }\n}\n\nconst AppRouter = () => (\n  <Router>\n    <Route path=\"/\" exact component={App} />\n  </Router>\n);\n\nexport default AppRouter;\n"]},"metadata":{},"sourceType":"module"}