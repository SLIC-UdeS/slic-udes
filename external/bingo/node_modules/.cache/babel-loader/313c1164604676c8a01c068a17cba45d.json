{"ast":null,"code":"import React,{Component}from'react';import moment from'moment';import momentDurationFormatSetup from'moment-duration-format';import SimpleStorage from'react-simple-storage';import Header from'./header';momentDurationFormatSetup(moment);function copyObject(obj){return Object.assign({},obj);}/* https://stackoverflow.com/a/12646864 */function shuffleArray(array){for(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));var _ref=[array[j],array[i]];array[i]=_ref[0];array[j]=_ref[1];}return array;}class Board extends Component{constructor(props){super(props);const size=props.size%2?props.size:props.size-1;const cellCount=size*size;const midpoint=(size*size-1)/2;// Ensure we have enough values to fill this size board.\n// If not, keep adding duplicate values until we do.\nlet values=props.values.slice();let i=0;while(values.length<cellCount){values.push(props.values[i]);i++;if(i>props.values.length-1)i=0;}this.state={activeCell:0,activeRow:0,activeCol:0,endTime:0,grid:this.generateRandomGrid(values,size),midpoint:midpoint,selection:{[midpoint]:true},size:size,startTime:Date.now(),values:values};this.handleKeyDown=this.handleKeyDown.bind(this);this.refreshBoard=this.refreshBoard.bind(this);this.updateLeaderBoard=this.updateLeaderBoard.bind(this);}/**\n   * Randomize supplied values and return \n   * a grid with dimensions size * size\n   */generateRandomGrid(values,size){const randomizedValues=shuffleArray(values);let grid=[];for(let row=0;row<size;row++){grid[row]=[];for(let col=0;col<size;col++){let id=col+row*size;grid[row][col]={value:randomizedValues[id],id:id};}}return grid;}updateLeaderBoard(){const name=document.getElementById('name').value;if(name&&name!==''){const data={name:name,timestamp:this.state.endTime,duration:this.state.endTime-this.state.startTime};const key=this.props.db.database().ref('games/'+this.props.gameId).child('leaderboard').push(data).key;this.setState({leaderboardSubmitted:true});return key;}}/**\n   * Randomize cell values, reset timer, and clear selection.\n   */refreshBoard(){this.setState({activeCell:0,activeRow:0,activeCol:0,bingo:false,grid:this.generateRandomGrid(this.state.values,this.state.size),leaderboardSubmitted:false,selection:{[this.state.midpoint]:true},startTime:Date.now(),endTime:0});}componentDidUpdate(prevProps,prevState){// not a new board\nif(prevState.startTime===this.state.startTime){// focus active cell\nif(prevState.activeCell!==this.state.activeCell){document.getElementById(this.props.id+'-cell-'+this.state.activeCell).focus();}// if selection has changed in some way, check for bingo\nif(prevState.selection!==this.state.selection){console.clear();console.log('Checking for bingo...');if(this.checkRow(this.state.activeRow)||this.checkCol(this.state.activeCol)||this.checkDiagonalA(this.state.activeRow,this.state.activeCol)||this.checkDiagonalB(this.state.activeRow,this.state.activeCol)){if(!this.state.bingo){console.log('It\\'s a bingo!');this.setState({bingo:true,endTime:Date.now()});}}else{console.log('Alas, not a bingo.');this.setState({bingo:false});}}}}checkIndices(indices){for(let i=0;i<indices.length;i++){let index=indices[i];if(!this.state.selection[index]){return false;}}return true;}checkRow(row){const size=this.state.size;const rowStart=row*size;for(let i=rowStart;i<rowStart+size;i++){if(!this.state.selection[i]){console.log('- Bingo in row '+row+'? Fail at cell '+i);return false;}}console.log('- Bingo in row '+row+'? Success!');return true;}checkCol(col){const size=this.state.size;for(let j=col;j<size*size;j+=size){if(!this.state.selection[j]){console.log('- Bingo in col '+col+'? Fail at cell '+j);return false;}}console.log('- Bingo in col '+col+'? Success!');return true;}/* Upper left to lower right */checkDiagonalA(row,col){const size=this.state.size;if(row===col){for(let i=0;i<size;i++){if(!this.state.selection[size*i+i]){console.log('- Bingo in diagonal A? Fail at cell '+(size*i+i));return false;}}console.log('- Bingo in diagonal A? Success!');return true;}}/* Upper right to lower left */checkDiagonalB(row,col){const size=this.state.size;if(row===size-col-1){for(let i=0;i<size;i++){if(!this.state.selection[size*i+size-i-1]){console.log('- Bingo in diagonal B? Fail at cell '+(size*i+size-i-1));return false;}}console.log('- Bingo in diagonal B? Success!');return true;}}handleKeyDown(event,row,col){switch(event.key){case'Down':case'ArrowDown':if(row<this.state.size-1)this.setActiveCell(row+1,col);event.preventDefault();break;case'Up':case'ArrowUp':if(row>0)this.setActiveCell(row-1,col);event.preventDefault();break;case'Left':case'ArrowLeft':if(col>0)this.setActiveCell(row,col-1);event.preventDefault();break;case'Right':case'ArrowRight':if(col<this.state.size-1)this.setActiveCell(row,col+1);event.preventDefault();break;default:break;}}setActiveCell(row,col){this.setState({activeCell:this.state.grid[row][col].id});}renderMidpointCell(cellId,row,col){return/*#__PURE__*/React.createElement(\"td\",{role:\"gridcell\",key:cellId},/*#__PURE__*/React.createElement(\"div\",{className:\"cell-contents\"},/*#__PURE__*/React.createElement(\"button\",{\"aria-disabled\":true,\"aria-pressed\":true,className:\"cell-toggle\",id:this.props.id+'-cell-'+cellId,onClick:()=>{this.setState({activeCell:cellId});},onKeyDown:event=>{this.handleKeyDown(event,row,col);},tabIndex:cellId===this.state.activeCell?'0':'-1'},/*#__PURE__*/React.createElement(\"svg\",{role:\"img\",\"aria-labelledby\":\"star-title\",xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\"},/*#__PURE__*/React.createElement(\"title\",{id:\"star-title\"},\"Star (free tile)\"),/*#__PURE__*/React.createElement(\"path\",{d:\"M12.6 1.4l2.2 7c.1.2.3.4.6.4h6.9c.7 0 1 .9.5 1.3l-5.7 4.2c-.2.1-.3.5-.2.7l2.7 7.2c.2.6-.5 1.2-1.1.7l-6-4.5c-.3-.2-.6-.2-.9 0l-6.1 4.5c-.5.5-1.3-.1-1-.7L7.1 15c.1-.2 0-.6-.3-.7l-5.6-4.2c-.6-.4-.2-1.3.4-1.3h6.9c.4 0 .6-.1.7-.4l2.2-7c.1-.7 1.1-.6 1.2 0z\"})))));}renderCell(cell,row,col){const isMidpoint=cell.id===this.state.midpoint;const selected=this.state.selection[cell.id]||isMidpoint?true:false;if(isMidpoint){return this.renderMidpointCell(cell.id,row,col);}return/*#__PURE__*/React.createElement(\"td\",{role:\"gridcell\",key:cell.id},/*#__PURE__*/React.createElement(\"div\",{className:\"cell-contents\"},/*#__PURE__*/React.createElement(\"button\",{\"aria-pressed\":selected,className:\"cell-toggle\",id:this.props.id+'-cell-'+cell.id,onClick:()=>{let selection=copyObject(this.state.selection);selection[cell.id]=!selected;this.setState({selection:selection,activeCell:cell.id,activeRow:row,activeCol:col});},onKeyDown:event=>{this.handleKeyDown(event,row,col);},tabIndex:cell.id===this.state.activeCell?'0':'-1'},cell.value)));}renderRow(row,y){return/*#__PURE__*/React.createElement(\"tr\",{role:\"row\",key:y},row.map((cell,x)=>{return this.renderCell(cell,y,x);}));}renderLeaderboardPrompt(){if(this.state.bingo){if(this.state.leaderboardSubmitted){return/*#__PURE__*/React.createElement(\"p\",{className:\"lh-copy mb0\"},\"You're on the leaderboard!\",' ',\"Keep playing on this bingo board or\",' ',/*#__PURE__*/React.createElement(\"button\",{onClick:this.refreshBoard},\"generate a new one\"),\".\");}else{return/*#__PURE__*/React.createElement(\"div\",{className:\"pt3\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Enter a name to display on the leaderboard:\"),/*#__PURE__*/React.createElement(\"div\",{className:\"pv2\"},/*#__PURE__*/React.createElement(\"input\",{style:{'backgroundColor':'#f6f7fa'},className:\"input-reset pa3 mb2 ba bw1 b--black\",id:\"name\",placeholder:\"Your Name\"}),/*#__PURE__*/React.createElement(\"button\",{className:\"tc fw8 blue-button white pa3 ml2 ba bw1 b--black\",onClick:this.updateLeaderBoard},\"Add me!\")));}}return null;}renderSuccess(){if(this.state.bingo){return/*#__PURE__*/React.createElement(\"div\",{className:\"success maxw-95 pa3 mv3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"flex flex-wrap items-center justify-between\"},/*#__PURE__*/React.createElement(\"div\",{className:\"w-50-l w-100 tc tl-l\",role:\"alert\",\"aria-live\":\"assertive\"},/*#__PURE__*/React.createElement(\"span\",{className:\"f2 fw8\"},\"You got bingo! \",/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"Hurray!\"},\"\\uD83C\\uDF89\")),/*#__PURE__*/React.createElement(\"div\",{className:\"f3 pt2\"},\"Total time: \",moment.duration(this.state.endTime-this.state.startTime).format('h [hr], m [min], s [sec]'))),/*#__PURE__*/React.createElement(\"div\",{className:\"w-50-l w-100 tc tr-l\"},this.renderLeaderboardPrompt())));}return null;}render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,{gotBingo:this.state.bingo},/*#__PURE__*/React.createElement(\"button\",{className:\"tc fw8 bg-white black pa3 ba bw1 b--black mb2\",onClick:this.refreshBoard},\"New Board\")),/*#__PURE__*/React.createElement(\"main\",null,/*#__PURE__*/React.createElement(\"p\",{style:{fontSize:\"12px\"}},\"\\uD83D\\uDEC8 See leaderboard and Instructions below the board.\"),/*#__PURE__*/React.createElement(\"table\",{role:\"grid\",className:\"maxw-95\"},/*#__PURE__*/React.createElement(\"tbody\",{role:\"rowgroup\"},this.state.grid.map((row,y)=>{return this.renderRow(row,y);}))),this.renderSuccess()),/*#__PURE__*/React.createElement(SimpleStorage,{parent:this,prefix:\"bingo-\".concat(this.props.gameId),blacklist:['activeCell','activeRow','activeCol','values']}));}}Board.defaultProps={size:5,values:'abcdefghijklmnopqrstuv'.split('')};export default Board;","map":{"version":3,"sources":["/home/jfellows/Documents/git/jfy133/nf-co.re/external/bingo/src/components/board.jsx"],"names":["React","Component","moment","momentDurationFormatSetup","SimpleStorage","Header","copyObject","obj","Object","assign","shuffleArray","array","i","length","j","Math","floor","random","Board","constructor","props","size","cellCount","midpoint","values","slice","push","state","activeCell","activeRow","activeCol","endTime","grid","generateRandomGrid","selection","startTime","Date","now","handleKeyDown","bind","refreshBoard","updateLeaderBoard","randomizedValues","row","col","id","value","name","document","getElementById","data","timestamp","duration","key","db","database","ref","gameId","child","setState","leaderboardSubmitted","bingo","componentDidUpdate","prevProps","prevState","focus","console","clear","log","checkRow","checkCol","checkDiagonalA","checkDiagonalB","checkIndices","indices","index","rowStart","event","setActiveCell","preventDefault","renderMidpointCell","cellId","renderCell","cell","isMidpoint","selected","renderRow","y","map","x","renderLeaderboardPrompt","renderSuccess","format","render","fontSize","defaultProps","split"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\nimport SimpleStorage from 'react-simple-storage';\nimport Header from './header';\n\nmomentDurationFormatSetup(moment);\n\nfunction copyObject(obj) {\n  return Object.assign({}, obj);\n}\n\n/* https://stackoverflow.com/a/12646864 */\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n}\n\nclass Board extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const size = props.size % 2 ? props.size : props.size - 1;\n    const cellCount = size * size;\n    const midpoint = (size * size - 1)/ 2;\n\n    // Ensure we have enough values to fill this size board.\n    // If not, keep adding duplicate values until we do.\n    let values = props.values.slice();\n    let i = 0;\n    while (values.length < cellCount) {\n      values.push(props.values[i]);\n      i++;\n      if (i > props.values.length - 1) i = 0;\n    }\n\n    this.state = {\n      activeCell: 0,\n      activeRow: 0,\n      activeCol: 0,\n      endTime: 0,\n      grid: this.generateRandomGrid(values, size),\n      midpoint: midpoint,\n      selection: {[midpoint]: true},\n      size: size,\n      startTime: Date.now(),\n      values: values,\n    };\n\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.refreshBoard = this.refreshBoard.bind(this);\n    this.updateLeaderBoard = this.updateLeaderBoard.bind(this);\n  }\n\n  /**\n   * Randomize supplied values and return \n   * a grid with dimensions size * size\n   */\n  generateRandomGrid(values, size) {\n    const randomizedValues = shuffleArray(values);\n\n    let grid = [];\n    for (let row = 0; row < size; row++) {\n      grid[row] = [];\n      for (let col = 0; col < size; col++) {\n        let id = col + (row * size);\n        grid[row][col] = {\n          value: randomizedValues[id],\n          id: id\n        }\n      }\n    }\n\n    return grid;\n  }\n\n  updateLeaderBoard() {\n    const name = document.getElementById('name').value;\n    if (name && name !== '') {\n      const data = {\n        name: name,\n        timestamp: this.state.endTime,\n        duration: this.state.endTime - this.state.startTime\n      };\n      const key = this.props.db.database().ref('games/' + this.props.gameId).child('leaderboard').push(data).key;\n      this.setState({leaderboardSubmitted: true});\n      return key;\n    }\n  }\n\n  /**\n   * Randomize cell values, reset timer, and clear selection.\n   */\n  refreshBoard() {\n    this.setState({\n      activeCell: 0,\n      activeRow: 0,\n      activeCol: 0,\n      bingo: false,\n      grid: this.generateRandomGrid(this.state.values, this.state.size),\n      leaderboardSubmitted: false,\n      selection: {[this.state.midpoint]: true},\n      startTime: Date.now(),\n      endTime: 0\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // not a new board\n    if (prevState.startTime === this.state.startTime) {\n      // focus active cell\n      if (prevState.activeCell !== this.state.activeCell) {\n        document.getElementById(this.props.id + '-cell-' + this.state.activeCell).focus();\n      }\n\n      // if selection has changed in some way, check for bingo\n      if (prevState.selection !== this.state.selection) {\n        console.clear();\n        console.log('Checking for bingo...');\n        if (\n          this.checkRow(this.state.activeRow) ||\n          this.checkCol(this.state.activeCol) ||\n          this.checkDiagonalA(this.state.activeRow, this.state.activeCol) ||\n          this.checkDiagonalB(this.state.activeRow, this.state.activeCol)\n        ) {\n          if (!this.state.bingo) {\n            console.log('It\\'s a bingo!');\n            this.setState({\n              bingo: true,\n              endTime: Date.now(),\n            });\n          }\n        } else {\n          console.log('Alas, not a bingo.')\n          this.setState({bingo: false});\n        }\n      }\n    }\n  }\n\n  checkIndices(indices) {\n    for (let i = 0; i < indices.length; i++) {\n      let index = indices[i];\n      if (!this.state.selection[index]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  checkRow(row) {\n    const size = this.state.size;\n    const rowStart = row * size;\n    for (let i = rowStart; i < rowStart + size; i++) {\n      if (!this.state.selection[i]) {\n        console.log('- Bingo in row ' + row + '? Fail at cell ' + i);\n        return false;\n      }\n    }\n    console.log('- Bingo in row ' + row + '? Success!');\n    return true;\n  }\n\n  checkCol(col) {\n    const size = this.state.size;\n    for (let j = col; j < size * size; j+= size) {\n      if (!this.state.selection[j]) {\n        console.log('- Bingo in col ' + col + '? Fail at cell ' + j);\n        return false;\n      }\n    }\n    console.log('- Bingo in col ' + col + '? Success!');\n    return true;\n  }\n\n  /* Upper left to lower right */\n  checkDiagonalA(row, col) {\n    const size = this.state.size;\n    if (row === col) {\n      for (let i = 0; i < size; i++) {\n        if (!this.state.selection[size * i + i]) {\n          console.log('- Bingo in diagonal A? Fail at cell ' + (size * i + i));\n          return false;\n        }\n      }\n      console.log('- Bingo in diagonal A? Success!');\n      return true;\n    }\n  }\n\n  /* Upper right to lower left */\n  checkDiagonalB(row, col) {\n    const size = this.state.size;\n    if (row === (size - col - 1)) {\n      for (let i = 0; i < size; i++) {\n        if (!this.state.selection[size * i + size - i - 1]) {\n          console.log('- Bingo in diagonal B? Fail at cell ' + (size * i + size - i - 1));\n          return false;\n        }\n      }\n      console.log('- Bingo in diagonal B? Success!')\n      return true;\n    }\n  }\n\n  handleKeyDown(event, row, col) {\n    switch (event.key) {\n      case 'Down':\n      case 'ArrowDown':\n        if (row < this.state.size - 1) this.setActiveCell(row + 1, col);\n        event.preventDefault();\n        break;\n      case 'Up':\n      case 'ArrowUp':\n        if (row > 0) this.setActiveCell(row - 1, col);\n        event.preventDefault();\n        break;\n      case 'Left':\n      case 'ArrowLeft':\n        if (col > 0) this.setActiveCell(row, col - 1);\n        event.preventDefault();\n        break;\n      case 'Right':\n      case 'ArrowRight':\n        if (col < this.state.size - 1) this.setActiveCell(row, col + 1);\n        event.preventDefault();\n        break;\n      default:\n        break;\n    }\n  }\n\n  setActiveCell(row, col) {\n    this.setState({activeCell: this.state.grid[row][col].id});\n  }\n\n  renderMidpointCell(cellId, row, col) {\n    return (\n      <td role='gridcell' key={cellId}>\n        <div className='cell-contents'>\n          <button\n            aria-disabled={true}\n            aria-pressed={true}\n            className='cell-toggle'\n            id={this.props.id + '-cell-' + cellId}\n            onClick={() => {this.setState({activeCell : cellId});}}\n            onKeyDown={(event) => {this.handleKeyDown(event, row, col);}}\n            tabIndex={cellId === this.state.activeCell ? '0' : '-1'}\n          >\n            <svg role=\"img\" aria-labelledby=\"star-title\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n              <title id=\"star-title\">Star (free tile)</title>\n              <path d=\"M12.6 1.4l2.2 7c.1.2.3.4.6.4h6.9c.7 0 1 .9.5 1.3l-5.7 4.2c-.2.1-.3.5-.2.7l2.7 7.2c.2.6-.5 1.2-1.1.7l-6-4.5c-.3-.2-.6-.2-.9 0l-6.1 4.5c-.5.5-1.3-.1-1-.7L7.1 15c.1-.2 0-.6-.3-.7l-5.6-4.2c-.6-.4-.2-1.3.4-1.3h6.9c.4 0 .6-.1.7-.4l2.2-7c.1-.7 1.1-.6 1.2 0z\"></path>\n            </svg>\n          </button>\n        </div>\n      </td>\n    );\n  }\n\n  renderCell(cell, row, col) {\n    const isMidpoint = cell.id === this.state.midpoint;\n    const selected = this.state.selection[cell.id] || isMidpoint ? true : false;\n\n    if (isMidpoint) { return this.renderMidpointCell(cell.id, row, col); }\n\n    return (\n      <td role='gridcell' key={cell.id}>\n        <div className='cell-contents'>\n          <button\n            aria-pressed={selected}\n            className='cell-toggle'\n            id={this.props.id + '-cell-' + cell.id}\n            onClick={() => {\n              let selection = copyObject(this.state.selection);\n              selection[cell.id] = !selected;\n\n              this.setState({\n                selection: selection,\n                activeCell: cell.id,\n                activeRow: row,\n                activeCol: col\n              });\n            }}\n            onKeyDown={(event) => {this.handleKeyDown(event, row, col);}}\n            tabIndex={cell.id === this.state.activeCell ? '0' : '-1'}\n          >\n            {/*cell.id*/}\n            {cell.value} \n          </button>\n        </div>\n      </td>\n    );\n  }\n\n  renderRow(row, y) {\n    return (\n      <tr role='row' key={y}>\n        {row.map((cell, x) => { return this.renderCell(cell, y, x); })}\n      </tr>\n    );\n  }\n\n  renderLeaderboardPrompt() {\n    if (this.state.bingo) {\n      if (this.state.leaderboardSubmitted) {\n        return (\n          <p className='lh-copy mb0'>\n            You're on the leaderboard!{' '}\n            Keep playing on this bingo board or{' '}\n            <button onClick={this.refreshBoard}>generate a new one</button>.\n          </p>\n        );\n      } else {\n        return (\n          <div className='pt3'>\n            <label htmlFor='name'>Enter a name to display on the leaderboard:</label>\n            <div className='pv2'>\n              <input\n                style={{'backgroundColor': '#f6f7fa'}}\n                className='input-reset pa3 mb2 ba bw1 b--black'\n                id='name'\n                placeholder='Your Name' />\n              <button\n                className='tc fw8 blue-button white pa3 ml2 ba bw1 b--black'\n                onClick={this.updateLeaderBoard}\n              >\n                Add me!\n              </button>\n            </div>\n          </div>\n        );\n      }\n    }\n    return null;\n  }\n\n  renderSuccess() {\n    if (this.state.bingo) {\n      return (\n        <div className='success maxw-95 pa3 mv3'>\n          <div className='flex flex-wrap items-center justify-between'>\n            <div className='w-50-l w-100 tc tl-l' role='alert' aria-live='assertive'>\n              <span className='f2 fw8'>You got bingo! <span role=\"img\" aria-label=\"Hurray!\">🎉</span></span>\n              <div className='f3 pt2'>\n                Total time: {moment.duration(this.state.endTime - this.state.startTime).format('h [hr], m [min], s [sec]')}\n              </div>\n            </div>\n            <div className='w-50-l w-100 tc tr-l'>\n              {this.renderLeaderboardPrompt()}\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <div>\n        <Header gotBingo={this.state.bingo}>\n          <button\n            className='tc fw8 bg-white black pa3 ba bw1 b--black mb2'\n            onClick={this.refreshBoard}\n          >\n            New Board\n          </button>\n        </Header>\n        <main>\n          <p style={{fontSize: \"12px\"}}>🛈 See leaderboard and Instructions below the board.</p>\n          <table role='grid' className='maxw-95'>\n            <tbody role='rowgroup'>\n              {this.state.grid.map((row, y) => { return (this.renderRow(row, y))})}\n            </tbody>\n          </table>\n          {this.renderSuccess()}\n        </main>\n        { /* Stores current board state in local storage so\n             game is preserved even when refreshed */ }\n        <SimpleStorage\n          parent={this}\n          prefix={`bingo-${this.props.gameId}`}\n          blacklist={['activeCell', 'activeRow', 'activeCol', 'values']}\n        />\n      </div>\n    );\n  }\n}\n\nBoard.propTypes = {\n  size: PropTypes.number,\n  values: PropTypes.array\n}\n\nBoard.defaultProps = {\n  size: 5,\n  values: 'abcdefghijklmnopqrstuv'.split('')\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}