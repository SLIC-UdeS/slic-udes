---
const { items, minimal, accordion } = Astro.props;

export interface Props {
    items: {
        section_name: string;
        section_slug?: string;
        children: {
            title: string;
            slug: string;
            order?: number;
        }[];
    }[];
    minimal?: boolean;
    accordion?: boolean;
}

let url = Astro.url.pathname.endsWith('/') ? Astro.url.pathname.slice(0, -1) : Astro.url.pathname;
url = url.replace(/\.html$/, '');
---

<div class:list={['nav', { accordion: accordion }]}>
    <div class="w-100 sticky-top-under">
        {
            items &&
                items.map((item) => {
                    return (
                        <div class="mb-3">
                            <h6 class="mb-0">
                                {item.section_slug && (
                                    <a
                                        class:list={[
                                            'text-decoration-none p-2 w-100 d-inline-block text-body section-header',
                                            { active: item.section_slug && url.endsWith(item.section_slug) },
                                        ]}
                                        href={item.section_slug}
                                    >
                                        {item.section_name}
                                    </a>
                                )}
                                {!item.section_slug && item.section_name}
                            </h6>
                            {minimal && (
                                <ul class="minimal-list">
                                    {item.children
                                        .sort((child) => child.order || 0)
                                        .map((child) => {
                                            return (
                                                <li
                                                    class:list={[
                                                        'mt-2 w-100 ps-4',
                                                        {
                                                            active:
                                                                url.endsWith(child.slug) ||
                                                                (url.split('/').length >= 5 &&
                                                                    url
                                                                        .split('/')
                                                                        .slice(0, 4)
                                                                        .join('/')
                                                                        .endsWith(child.slug.replace(/\/$/, ''))),
                                                        },
                                                    ]}
                                                >
                                                    <a
                                                        class:list={[
                                                            'text-decoration-none p-1',
                                                            'text-center',
                                                            'd-none',
                                                            'stretched-link',
                                                        ]}
                                                        href={child.slug}
                                                    />
                                                    <span set:html={child.title} />
                                                </li>
                                            );
                                        })}
                                </ul>
                            )}
                            {!minimal && (
                                <ul class="list-unstyled">
                                    {item.children &&
                                        item.children
                                            .sort((child) => child.order || 0)
                                            .map((child) => {
                                                return (
                                                    <li
                                                        class:list={[
                                                            'w-100 py-1 ps-3 position-relative',
                                                            {
                                                                active:
                                                                    url.endsWith(child.slug.replace(/\/$/, '')) ||
                                                                    (url.split('/').length >= 5 &&
                                                                        url
                                                                            .split('/')
                                                                            .slice(0, 4)
                                                                            .join('/')
                                                                            .endsWith(child.slug.replace(/\/$/, ''))),
                                                            },
                                                        ]}
                                                    >
                                                        <a
                                                            class:list={[
                                                                'text-decoration-none p-1',
                                                                'd-inline-block',
                                                                'stretched-link',
                                                                {
                                                                    'text-body-secondary': !url.endsWith(child.slug),
                                                                },
                                                            ]}
                                                            href={child.slug}
                                                        >
                                                            {child.title}
                                                        </a>
                                                    </li>
                                                );
                                            })}
                                </ul>
                            )}
                        </div>
                    );
                })
        }
    </div>
</div>

<style lang="scss">
    @import 'src/styles/_variables.scss';
    h6 a,
    li {
        &:hover {
            background-color: transparentize($success, 0.85);
        }
    }
    li {
        font-size: 0.9rem;
    }

    li.active,
    h6 .active {
        background-color: transparentize($success, 0.75);
        a {
            color: $green-800 !important;
        }
    }
    .minimal-list li {
        transition: transform 0.3s ease;
        &:hover {
            color: $success;
            list-style: none;
            transform: translateX(-5rem);

            a {
                display: block !important;
                color: $success;
                margin-left: -5rem;
                transition: all 3s ease-in;
            }
        }
    }
    @include media-breakpoint-down(md) {
        .minimal-list li {
            display: block !important;
        }
    }

    :global([data-bs-theme='dark']) {
        .section-header,
        li {
            &:hover {
                background-color: transparentize($success-dark, 0.6);
                a {
                    color: $gray-200 !important;
                }
            }
        }
        .section-header.active,
        .section-header:hover {
            color: $gray-200 !important;
        }
        li.active,
        .section-header.active {
            background-color: transparentize($success-dark, 0.35);
            & a {
                color: $gray-200 !important;
            }
        }
    }
    // show only the active section
    .nav.accordion {
        ul {
            display: none;
        }
        h6:has(.active) ~ ul,
        ul:has(.active) {
            display: block;
        }
        div.mb-3:not(:has(.active)) {
            margin-bottom: 0 !important;
        }
    }
</style>
