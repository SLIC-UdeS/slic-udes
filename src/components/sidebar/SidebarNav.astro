---
const { items } = Astro.props;

export interface Props {
    items: {
        section_name: string;
        children: {
            title: string;
            slug: string;
            order?: number;
        }[];
    }[];
}

const url = Astro.url.pathname;
---

<div class="nav">
    <div class="w-100 sticky-top-under">
        {
            items &&
                items.map((item) => {
                    return (
                        <div class="mb-3">
                            <h6 class="my-2 text-body">{item.section_name}</h6>
                            <ul class="list-unstyled">
                                {item.children.map((child) => {
                                    return (
                                        <li
                                            class:list={[
                                                'mt-2 w-100',
                                                {
                                                    active: url.endsWith(child.slug),
                                                },
                                            ]}
                                        >
                                            <a
                                                class:list={[
                                                    'text-decoration-none p-1',
                                                    {
                                                        'text-body-secondary': !url.endsWith(child.slug),
                                                    },
                                                ]}
                                                href={child.slug}
                                            >
                                                {child.title}
                                            </a>
                                        </li>
                                    );
                                })}
                            </ul>
                        </div>
                    );
                })
        }
    </div>
</div>

<style lang="scss">
    @import 'src/styles/_variables.scss';

    li {
        font-size: 0.9rem;
    }

    li.active {
        background-color: transparentize($success, 0.75);
        a {
            color: $green-800 !important;
        }
    }

    :global([data-bs-theme='dark']) {
        li.active {
            background-color: transparentize($success-dark, 0.35);
            & a {
                color: $gray-200 !important;
            }
        }
    }
</style>
