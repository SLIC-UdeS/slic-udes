---
import PageLayout from '@layouts/PageLayout.astro';
import { getCollection } from 'astro:content';
import SidebarNav from '@components/sidebar/SidebarNav.astro';
import GitHubProfilePictureExtended from '@components/GitHubProfilePictureExtended.svelte';
import GitHubProfilePicture from '@components/GitHubProfilePicture.svelte';
import { Image } from 'astro:assets';

const images = import.meta.glob('../../assets/**/*.{png,jpg,jpeg,gif,svg}');

let blogPosts = await getCollection('blog');

// filter out posts that have a pubDate later than today
blogPosts = blogPosts
    .filter((post) => {
        const pubDate = new Date(post.data.pubDate);
        return pubDate < new Date();
    })
    .filter((post) => {
        if (process.env.production) {
            return post.data.draft !== true;
        } else {
            return true;
        }
    })
    .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

// get years of all posts
const years = [...new Set(blogPosts.map((post) => new Date(post.data.pubDate).getFullYear()))].sort((a, b) => b - a);

const sections = years.map((year) => {
    return {
        section_name: year,
        section_slug: '#year-' + year,
        children: blogPosts
            .filter((post) => new Date(post.data.pubDate).getFullYear() === year)
            .map((post) => {
                return {
                    title: post.data.title,
                    slug: '/blog/' + post.slug,
                    pubDate: post.data.pubDate,
                };
            }),
    };
});
---

<PageLayout
    title="nf-core blog"
    subtitle="News and updates from the nf-core community."
    mainpage_container={true}
    subfooter={false}
    docSearchTags={[{ name: 'page_type', content: 'Blog' }]}
    viewTransitions={true}
>
    <div class="row">
        <div class="col-12 col-md-2 sticky-top-under d-none d-md-inline sidebar-left pt-1">
            <strong class="h6 p-2 text-body">Blog posts</strong>
            <SidebarNav items={sections} />
        </div>

        <div class="col">
            {blogPosts.length === 0 && <div class="">Nothing to see her yet! Come back soon</div>}
            {
                years.map((year) => (
                    <div id={'year-' + year} class="d-flex align-items-start flex-wrap">
                        {blogPosts
                            .filter((post) => new Date(post.data.pubDate).getFullYear() === year)
                            .map((post) => (
                                <div class="card m-xl-3 m-1">
                                    {post.data.headerImage && (
                                        <Image
                                            src={
                                                post.data.headerImage.startsWith('/assets/')
                                                    ? images['../..' + post.data.headerImage]()
                                                    : post.data.headerImage
                                            }
                                            class="card-img-top object-fit-cover"
                                            alt={post.data.headerImageAlt || ''}
                                            height={240}
                                            width={512}
                                            transition:name="cover-image"
                                        />
                                    )}
                                    <div class="card-body">
                                        <h2 transition:name="title">{post.data.title}</h2>
                                        <p class="lead">{post.data.subtitle}</p>
                                        <p class="card-text small">
                                            {async () => {
                                                const { remarkPluginFrontmatter } = await post.render();
                                                return remarkPluginFrontmatter.excerpt;
                                            }}
                                        </p>
                                        <a href={'/blog/' + post.slug} class="stretched-link" />
                                    </div>
                                    <div class="card-footer d-flex align-items-center justify-space-between">
                                        <div class="me-auto">
                                            {post.data.authors.length > 2 &&
                                                post.data.authors.map((author) => (
                                                    <GitHubProfilePicture
                                                        image={'https://github.com/' + author + '.png'}
                                                        name={author}
                                                        circle={true}
                                                        size={40}
                                                    />
                                                ))}
                                            {post.data.authors.length <= 2 &&
                                                post.data.authors.map((author) => (
                                                    <GitHubProfilePictureExtended username={author} size={40} />
                                                ))}
                                        </div>
                                        <span class="text-body-secondary text-small">
                                            published at {new Date(post.data.pubDate).toLocaleDateString()}
                                        </span>
                                    </div>
                                </div>
                            ))}
                    </div>
                ))
            }
        </div>
    </div>
</PageLayout>

<style lang="scss">
    @import '@styles/_variables.scss';
    .card {
        width: 32rem;
        .card-footer :global(a) {
            margin-bottom: 0 !important;
        }
    }
    @include media-breakpoint-down(md) {
        .card {
            width: 100%;
        }
    }
</style>
