---
import PageLayout from '@layouts/PageLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
    return ['contributing', 'usage'].map((subsection) => ({
        params: {
            subsection: subsection,
        },
    }));
}

const { subsection } = Astro.params;

let docs = await getCollection('docs');
import SidebarNav from '@components/sidebar/SidebarNav.astro';
let sections: { section_name: string; section_slug: string; children: { title: string; slug: string }[] }[] = [
    { section_name: 'Usage', section_slug: '/docs/usage/', children: [] },
    { section_name: 'Contributing', section_slug: '/docs/contributing/', children: [] },
];
// sort docs first depth, then by weight, then by title
const sortDocs = (a: CollectionEntry<'docs'>, b: CollectionEntry<'docs'>) => {
    if (a.slug.split('/').length < b.slug.split('/').length) {
        return 1;
    } else if (a.slug.split('/').length > b.slug.split('/').length) {
        return -1;
    } else {
        a.data.weight = a.data.weight || 100;
        b.data.weight = b.data.weight || 100;
        if (a.data.weight < b.data.weight) {
            return -1;
        } else if (a.data.weight > b.data.weight) {
            return 1;
        } else {
            if (a.data.title < b.data.title) {
                return -1;
            } else if (a.data.title > b.data.title) {
                return 1;
            } else {
                return 0;
            }
        }
    }
};

let subsectionDocs: CollectionEntry<'docs'>[] = docs.filter((doc) => doc.slug.startsWith(subsection + '/'));

subsectionDocs.sort(sortDocs);
const sectionIndex = sections.findIndex((section) => section.section_name.toLowerCase() === subsection);
subsectionDocs
    .filter((doc) => doc.slug.split('/').length === 2)
    .map((doc) => {
        sections[sectionIndex].children.push({ title: doc.data.title, slug: '/docs/' + doc.slug + '/' });
    });
---

<PageLayout title={subsection} subtitle="">
    <div class="row">
        <div class="col-12 col-md-2 sticky-top-under d-none d-md-inline sidebar-left">
            <SidebarNav items={sections} />
        </div>

        <div class="col-12 col-md-10">
            <p>
                Here you can find all documentation on how to use nf-core pipelines, and nf-core tools to start
                processing your data. You will also find information on how to contribute to nf-core pipelines, modules
                and subworkflows.
            </p>
            <div class="">
                <h2>{subsection.slice(0, 1).toUpperCase() + subsection.slice(1)}</h2>
                <div class="grid">
                    {
                        subsectionDocs
                            .filter((doc) => doc.slug.split('/').length === 2)
                            .map((doc) => {
                                // check if this is a parent of a nested doc
                                const childDocs = subsectionDocs.filter((childDoc) =>
                                    childDoc.slug.startsWith(doc.slug + '/'),
                                );
                                if (childDocs.length > 0) {
                                    return (
                                        <div class="g-col-12 g-col-md-6 g-col-lg-4 g-col-xxl-3 card">
                                            <span class="card-header">
                                                <a href={'/docs/' + doc.slug + '/'} class="text-decoration-none">
                                                    {doc.data.title}
                                                </a>
                                                <button
                                                    class="btn p-0"
                                                    data-bs-toggle="collapse"
                                                    data-bs-target={'#' + doc.slug.replace('/', '-')}
                                                    aria-expanded="false"
                                                    aria-controls={doc.slug.replace('/', '-')}
                                                >
                                                    <i class="fa-solid fa-chevron-down" />
                                                </button>
                                            </span>
                                            <ul class="card-body collapse mx-3 mb-0" id={doc.slug.replace('/', '-')}>
                                                {childDocs.map((childDoc) => {
                                                    return (
                                                        <li>
                                                            <a href={'/docs/' + childDoc.slug + '/'}>
                                                                {childDoc.data.title}
                                                            </a>
                                                        </li>
                                                    );
                                                })}
                                            </ul>
                                        </div>
                                    );
                                } else {
                                    return (
                                        <div class="g-col-12 g-col-md-6 g-col-lg-4 g-col-xxl-3 card">
                                            <a
                                                href={'/docs/' + doc.slug + '/'}
                                                class="stretched-link text-decoration-none card-header"
                                            >
                                                {doc.data.title}
                                            </a>
                                            <div class="card-body">{doc.data.subtitle}</div>
                                        </div>
                                    );
                                }
                            })
                    }
                </div>
            </div>
        </div>
    </div>
</PageLayout>
<style>
    .btn[aria-expanded='true'] {
        transform: rotate(180deg);
    }
</style>
