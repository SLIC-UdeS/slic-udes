---
import PageLayout from '@layouts/PageLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
let docs = await getCollection('docs');
let usageDocs: CollectionEntry<'docs'>[] = [];
let contributingDocs: CollectionEntry<'docs'>[] = [];
import SidebarNav from '@components/sidebar/SidebarNav.astro';
let sections: { section_name: string; children: { title: string; slug: string }[] }[] = [
    { section_name: 'Usage', children: [] },
    { section_name: 'Contributing', children: [] },
];
// sort docs first depth, then by weight, then by title
const sortDocs = (a: CollectionEntry<'docs'>, b: CollectionEntry<'docs'>) => {
    if (a.slug.split('/').length < b.slug.split('/').length) {
        return 1;
    } else if (a.slug.split('/').length > b.slug.split('/').length) {
        return -1;
    } else {
        a.data.weight = a.data.weight || 100;
        b.data.weight = b.data.weight || 100;
        if (a.data.weight < b.data.weight) {
            return -1;
        } else if (a.data.weight > b.data.weight) {
            return 1;
        } else {
            if (a.data.title < b.data.title) {
                return -1;
            } else if (a.data.title > b.data.title) {
                return 1;
            } else {
                return 0;
            }
        }
    }
};

docs.map((doc) => {
    if (doc.slug.startsWith('usage/')) {
        usageDocs.push(doc);
    }
    if (doc.slug.startsWith('contributing/')) {
        contributingDocs.push(doc);
    }
});
usageDocs.sort(sortDocs);
contributingDocs.sort(sortDocs);

usageDocs
    .filter((doc) => doc.slug.split('/').length === 2)
    .map((doc) => {
        sections[0].children.push({ title: doc.data.title, slug: '/docs/' + doc.slug + '/' });
    });
contributingDocs
    .filter((doc) => doc.slug.split('/').length === 2)
    .map((doc) => {
        sections[1].children.push({ title: doc.data.title, slug: '/docs/' + doc.slug + '/' });
    });
---

<PageLayout title="Docs" subtitle="How to use nf-core pipelines and contribute to the nf-core community">
    <div class="row">
        <div class="col-12 col-md-2 sticky-top-under d-none d-md-inline sidebar-left">
            <SidebarNav items={sections} />
        </div>

        <div class="col-12 col-md-10">
            <p>
                Here you can find all documentation on how to use nf-core pipelines, and nf-core tools to start
                processing your data. You will also find information on how to contribute to nf-core pipelines, modules
                and subworkflows.
            </p>
            <div class="row row-cols-1 row-cols-md-2 justify-content-around">
                <div class="col">
                    <h2>Usage</h2>
                    <ul>
                        {
                            usageDocs
                                .filter((doc) => doc.slug.split('/').length === 2)
                                .map((doc) => {
                                    // check if this is a parent of a nested doc
                                    const childDocs = usageDocs.filter((childDoc) =>
                                        childDoc.slug.startsWith(doc.slug + '/'),
                                    );
                                    if (childDocs.length > 0) {
                                        return (
                                            <li>
                                                <span>
                                                    <a href={'/docs/' + doc.slug + '/'}>{doc.data.title}</a>
                                                    <button
                                                        class="btn p-0"
                                                        data-bs-toggle="collapse"
                                                        data-bs-target={'#' + doc.slug.replace('/', '-')}
                                                        aria-expanded="false"
                                                        aria-controls={doc.slug.replace('/', '-')}
                                                    >
                                                        <i class="fa-solid fa-chevron-down" />
                                                    </button>
                                                </span>
                                                <ul class="collapse" id={doc.slug.replace('/', '-')}>
                                                    {childDocs.map((childDoc) => {
                                                        return (
                                                            <li>
                                                                <a href={'/docs/' + childDoc.slug + '/'}>
                                                                    {childDoc.data.title}
                                                                </a>
                                                            </li>
                                                        );
                                                    })}
                                                </ul>
                                            </li>
                                        );
                                    } else {
                                        return (
                                            <li>
                                                <a href={'/docs/' + doc.slug + '/'}>{doc.data.title}</a>
                                            </li>
                                        );
                                    }
                                })
                        }
                    </ul>
                </div>

                <div class="col">
                    <h2>Contributing</h2>
                    <ul>
                        {
                            contributingDocs
                                .filter((doc) => doc.slug.split('/').length === 2)
                                .map((doc) => {
                                    // check if this is a parent of a nested doc
                                    const childDocs = contributingDocs.filter((childDoc) =>
                                        childDoc.slug.startsWith(doc.slug + '/'),
                                    );
                                    if (childDocs.length > 0) {
                                        return (
                                            <li>
                                                <span>
                                                    <a href={'/docs/' + doc.slug + '/'}>{doc.data.title}</a>
                                                    <button
                                                        class="btn p-0"
                                                        data-bs-toggle="collapse"
                                                        data-bs-target={'#' + doc.slug.replace('/', '-')}
                                                        aria-expanded="false"
                                                        aria-controls={doc.slug.replace('/', '-')}
                                                    >
                                                        <i class="fa-solid fa-chevron-down" />
                                                    </button>
                                                </span>
                                                <ul class="collapse" id={doc.slug.replace('/', '-')}>
                                                    {childDocs.map((childDoc) => {
                                                        return (
                                                            <li>
                                                                <a href={'/docs/' + childDoc.slug + '/'}>
                                                                    {childDoc.data.title}
                                                                </a>
                                                            </li>
                                                        );
                                                    })}
                                                </ul>
                                            </li>
                                        );
                                    } else {
                                        return (
                                            <li>
                                                <a href={'/docs/' + doc.slug + '/'}>{doc.data.title}</a>
                                            </li>
                                        );
                                    }
                                })
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</PageLayout>
<style>
    .btn[aria-expanded='true'] {
        transform: rotate(180deg);
    }
</style>
