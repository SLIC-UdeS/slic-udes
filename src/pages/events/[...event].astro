---
import MarkdownTocLayout from '@layouts/MarkdownTocLayout.astro';
import { getCollection } from 'astro:content';
import { YouTube } from '@astro-community/astro-embed-youtube';
import VideoTranscript from '@components/VideoTranscript.svelte';

export async function getStaticPaths() {
    const events = await getCollection('events');
    return events.map((event) => ({
        params: {
            event: event.slug,
        },
        props: {
            event: event,
        },
    }));
}
const { event } = Astro.props;
const title = event.data.title;
const subtitle = event.data.subtitle;
let frontmatter = event.data;
if (typeof frontmatter.location_url == 'string') {
    frontmatter.location_url = [frontmatter.location_url];
}
const { headings, Content, remarkPluginFrontmatter } = await event.render();

const md_github_url = 'https://github.com/nf-core/website/blob/main/src/content/events/' + event.id;

let video = event.data.location_url;
if (typeof video === 'string') {
    video = [video];
}
video = video?.filter((v) => v.includes('youtube.com') || v.includes('youtu.be'))[0];
const id = video?.replace('https://www.youtube.com/watch?v=', '').replace('https://youtu.be/', '');
---

{frontmatter.import_typeform && <script async src="https://embed.typeform.com/next/embed.js" />}
<MarkdownTocLayout
    title={title}
    subtitle={subtitle}
    md_github_url={md_github_url}
    event_header={frontmatter}
    headings={headings}
    docSearchTags={[
        { name: 'page_type', content: 'Event' },
        { name: 'page_subtype', content: frontmatter.type },
    ]}
    viewTransitions={true}
>
    <Content />
    {
        id && (
            <VideoTranscript id={id} client:idle>
                <YouTube id={id} poster={`https://img.youtube.com/vi/${id}/hqdefault.jpg`} />
            </VideoTranscript>
        )
    }
</MarkdownTocLayout>
