---
import MarkdownTocLayout from '@layouts/MarkdownTocLayout.astro';
import { Markdown } from '@astropub/md';
import { getGitHubFile } from '@components/octokit';

let headings: {
    depth: number;
    text: string;
    slug: string;
}[] = [];

const md_content = await getGitHubFile('tools', 'README.md', 'master')
    .catch((error) => {
        console.log(error);
        return;
    })
    .then(async (response) => {
        let content = response;
        if (content === undefined) {
            console.log(`Couldn't get tools README`);
        }
        content = content.replace(/(.*?)(\*\*)(.*?)(\*\*)/s, '');
        const text_content = content.replace(/```(.*?)```/gs, '');
        // get headings and their depth for table of contents
        headings = text_content.match(/^(#{1,6})\s(.*)$/gm);
        if (headings === null) {
            headings = [];
            return content;
        }
        headings = headings.map((heading) => {
            const depth = heading.match(/^(#{1,6})/)[0].length;
            let text = heading.match(/^(#{1,6})\s(.*)$/)[2];
            // remove html comments
            text = text.replace(/<!--(.*?)-->/g, '');
            // check if exactly two backticks are used to wrap text
            if (text.match(/`(.+?)`/g)) {
                text = text.replace(/`(.+?)`/g, '<code>$1</code>');
                const slug = text
                    .replace(/<code>(.*?)<\/code>/g, '$1')
                    .toLowerCase()
                    .replace(/ /g, '-')
                    .replace(/[^\w-]+/g, '');
                return { depth, text, slug };
            } else {
                const slug = text
                    .toLowerCase()
                    .replace(/ /g, '-')
                    .replace(/[^\w-]+/g, '');
                return { depth, text, slug };
            }
        });
        return content;
    });

const max_heading_depth = 2;

// filter out headings that are higher than max_heading_depth
headings = headings.filter((h) => h.depth <= max_heading_depth);

const title = 'nf-core/tools';
const subtitle = 'The nf-core companion tool, to help with common tasks.';
const md_github_url = 'https://github.com/nf-core/tools/blob/master/README.md';
---

<MarkdownTocLayout
    title={title}
    subtitle={subtitle}
    md_github_url={md_github_url}
    headings={headings}
    left_sidebar={true}
    sections={[
        {
            section_name: 'Tools',
            children: [
                { title: 'Introduction', slug: '/tools/', order: 1 },
                { title: 'API', slug: 'api/', order: 2 },
            ],
        },
    ]}
>
    <Markdown of={md_content} />
</MarkdownTocLayout>
